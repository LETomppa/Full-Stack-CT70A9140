{"version":3,"sources":["./util.inspect (ignored)","./src/app/components/safe.pipe.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n\r\n    transform(url: string): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>Best Counter-Strike Clips</h1>\n    <p class=\"lead\">Welcome to our website! Please register or log in to see the best clips in the world!</p>\n    <div>\n        <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a style=\"background-color: rgb(53, 50, 50); margin-left: 5px;\" class=\"btn btn-primary\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-4\">\n      <h3>Best Highlights</h3>\n      <p>Here you can find amazing highlights</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>Learn</h3>\n      <p>You can also learn from these videos and become a better player</p>\n    </div>\n  </div>\n\n  <p class=\"lead\" style=\"margin-top: 10vh;\">This is a MEAN Stack project using:</p>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h3>Express Backend</h3>\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>Angular-CLI</h3>\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>JWT Tokens</h3>\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n    </div>\n  </div>","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user[\"name\"]}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username: {{user[\"username\"]}}</li>\n        <li class=\"list-group-item\">Email: {{user[\"email\"]}}</li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile[\"user\"];\n    },\n      err => {\n        console.log(err);\n        return false;\n      });\n  }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">Hello {{user[\"name\"]}}!</h2>\n    <p>You now have access to the best Counter-Strike clips of all time:</p>\n    <ul>\n        <div *ngFor=\"let link of links\">\n            <iframe width=\"560\" height=\"315\" [src]=\"link.url | safe\" frameborder=\"0\" allowfullscreen></iframe>\n        </div>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  user: Object;\n  links: Array<any>;\n\n  constructor(private authService: AuthService, private router: Router, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile[\"user\"];\n    },\n      err => {\n        console.log(err);\n        return false;\n      });\n    this.fetchLinks();\n  }\n\n  convertToEmbedUrl(url: string): string {\n    let videoId = url.split('youtu.be/')[1];\n    return 'https://www.youtube.com/embed/' + videoId;\n  }\n\n  fetchLinks() {\n    this.http.get<any>('http://localhost:3000/links/fetch-links').subscribe(data => {\n      this.links = data.links.map(link => {\n        return {\n          link,\n          url: this.convertToEmbedUrl(link.url)\n        };\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate() {\r\n        if (this.authService.loggedIn()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data[\"success\"]) {\n        this.authService.storeUserData(data[\"token\"], data[\"user\"]);\n        alert('You are now logged in');\n        this.router.navigate(['dashboard']);\n      } else {\n        alert(data[\"msg\"]);\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      alert('Please fill in all fields');\n      return false;\n    }\n\n    // Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      alert('Please use a valid email');\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if (data[\"success\"]) {\n        alert('You are now registered and can log in!');\n        this.router.navigate(['/login']);\n      } else {\n        alert('Something went wrong.');\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","\n<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SafePipe } from './components/safe.pipe';\n\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"#\">Best Counter-Strike Clips</a>\n      </div>\n      <div id=\"navbar\" class=\"collapse navbar-collapse\">\n        <ul class=\"nav navbar-nav navbar-left\">\n          <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/']\">Home</a></li>\n        </ul>\n\n        <ul class=\"nav navbar-nav navbar-right\">\n            <li *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/dashboard']\">Dashboard</a></li>\n            <li *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/profile']\">Profile</a></li>\n            <li *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/login']\">Login</a></li>\n            <li *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/register']\">Register</a></li>\n            <li *ngIf=\"authService.loggedIn()\"><a (click)=\"onLogoutClick()\" href=\"#\">Logout</a></li>\n          </ul>\n      </div><!--/.nav-collapse -->\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    alert(\"You are logged out\");\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, { headers: headers });\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, { headers: headers });\n  }\n\n  getProfile() {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.authToken\n    });\n    return this.http.get('http://localhost:3000/users/profile', { headers: headers });\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    const helper = new JwtHelperService();\n    const isExpired = !helper.isTokenExpired(localStorage.getItem('id_token'));\n    return isExpired;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}